##################################
#  ____________________________
# (   _________________________)
#  ) (__  _  _  _    _
# (   __)( \/ )( \/\/ )/\/\
#  ) (    \  /  \    //    \
# (___)    \/    \/\/(_/\/\_) 2.6
#
#
#  This is the default configuration file shipped with fvwm.
#
#  This config file is organized as follows:
#
#    1: Functions
#    2: Styles
#    3: Colorsets
#    4: Menus
#    5: Bindings
#    6: Decor
#    7: Modules
#
#################################

# InfoStoreAdd can be used to store variable data internal to fvwm.
# The variable can then be used in the configuration as $[infostore.name].
#
# You can also use environment variables but for data internal to fvwm
# use InfoStore variables instead.
#
# The following is used in various menus and also sets the terminal
# that FvwmConsole uses. Change this to your terminal of choice
InfoStoreAdd terminal         xterm
InfoStoreAdd oreterminal      mlterm
InfoStoreAdd orebrowser       firefox
InfoStoreAdd orekeepass       keepassx

ImagePath +:$HOME/.fvwm/icons
###########
# 1: Functions
#
# Fvwm can use custom functions for various tasks.
# The syntax for defining a function named FunctionName is:
#
#   DestroyFunc FunctionName
#   AddToFunc FunctionName
#   + I [Action to do Immediately]
#   + C [Action to do on a Mouse Click]
#   + D [Action to do on a Mouse Double Click]
#   + H [Action to do on a Mouse Hold]
#   + M [Action to do on a Mouse Motion]
###########

# Start Function
#
# The start function is run right after fvwm is done reading
# the config file. This function run after each restart
# so using Test (Init) or Test (Restart) can further control
# actions that are run during the first time run (Init) or
# actions that are run after a restart.
DestroyFunc StartFunction
AddToFunc   StartFunction
+ I Module FvwmButtons RightPanel
+ I Module FvwmEvent EventNewDesk
# AddToFunc   StartFunction
# + I Test (Init, f $[FVWM_USERDIR]/.BGdefault) \
#     Exec exec fvwm-root $[FVWM_USERDIR]/.BGdefault
# + I TestRc (NoMatch) Exec exec fvwm-root \
#     $[FVWM_DATADIR]/default-config/images/background/bg1.png
# + I Test (Init) Module FvwmBanner
# + I Module FvwmButtons RightPanel
# + I Module FvwmEvent EventNewDesk

# Function: MoveClickX $0 $1 $2
#
# This function runs variable actions on different events
# and is used with the mouse bindings to allow different
# actions depending on if the mouse is clicked, double clicked
# or moved. Use "Nop" for no action.
#
#   $0 - Action on Mouse Hold + Move
#   $1 - Action on Mouse Click
#   $2 - Action on Mouse DoubleClick
#
#  Example: Mouse 1 T A MoveClickX Move Raise Maximize
#
#  Click title bar to raise, double click to maximize,
#  and click+move to move the window.
DestroyFunc MoveClickX
AddToFunc   MoveClickX
+ M $0
+ C $1
+ D $2

# Function: ViewManPage $0
#
# This function loads the man page $0 in an terminal
# and is used with the help menu.
DestroyFunc ViewManPage
AddToFunc   ViewManPage
+ I Exec exec $[infostore.terminal] -g 80x40 \
  -n "Manual Page - $0" -T "Manual Page - $0" -e man "$0"

# Function: SetBG $0
#
# SetBG is used with the background menu to set the background
# image and configure it to be loaded the next time fvwm is run.
# Note, fvwm-root can't use .jpeg or resize images. Use something
# like display, feh, etc.
DestroyFunc SetBG
AddToFunc   SetBG
+ I Test (f $[FVWM_USERDIR]/images/background/$0) \
    Exec exec fvwm-root $[FVWM_USERDIR]/images/background/$0
+ I TestRc (Match) Exec exec ln -fs images/background/$0 \
    $[FVWM_USERDIR]/.BGdefault
+ I TestRc (Match) Break
+ I Test (!f $[FVWM_DATADIR]/default-config/images/background/$0) Break
+ I Exec exec fvwm-root $[FVWM_DATADIR]/default-config/images/background/$0
+ I Exec exec ln -fs $[FVWM_DATADIR]/default-config/images/background/$0 \
    $[FVWM_USERDIR]/.BGdefault


# Function: IconManClick
#
# This function is run from FvwmIconMan when the button is clicked.
DestroyFunc IconManClick
AddToFunc   IconManClick
# + I ThisWindow (Raised, !Shaded, !Iconic, CurrentPage) Iconify
+ I ThisWindow (Raised, !Shaded, !Iconic, CurrentPage) Focus
+ I TestRc (Match) Break
+ I ThisWindow (!Raised) Raise
+ I ThisWindow (Shaded) WindowShade
+ I ThisWindow (Iconic) Iconify
+ I ThisWindow (AcceptsFocus) FlipFocus

# Function: ToggleTitle
#
# This function will toggle if fvwm shows the TitleBar.
DestroyFunc ToggleTitle
AddToFunc   ToggleTitle
+ I ThisWindow (State 1) WindowStyle Title
+ I TestRc (Match) State 1 False
+ I TestRc (Match) Break
+ I WindowStyle !Title
+ I State 1 True

# Function: ChangeDesk
#
# This function is called by FvwmEvent every time the Desk is changed.
DestroyFunc ChangeDesk
AddToFunc   ChangeDesk
+ I SendToModule FvwmButtons ChangeButton desk0 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk1 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk2 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk3 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk$0 Colorset 11

###### {{{ Pack Window Move
# Name:     PackWindowLeft
# Bound:    Alt+Shift+Left When a window is active
# Purpose:  See PackWindowUp.
#
# The Logic works likes this:
#   1. Set Destination to the Left Edge
#   2. For every window, Run these tests:
#               + Is the Window's Right edge further _Right_ than furthest edge seen yet?
#       And:    + Is it's Right edge Further _Left_ than Target Windows Left edge? (ie,
#in the way)
#           Yes:
#                   + Does the window start inside Target Window, and end below?
#               Or  + Does it start above, and end inside?
#               Or  + Is it the same vertical position/height/size, or start inside and
#end inside?
#               Or  + Does it start above, and end below?
#                   Yes:
#                       This is the new Destination.
#                   No:
#                       Nop
#           No:
#               Nop
#   3. Move to Destination.
#
#################

# DestroyFunc PackSetLowW
# AddToFunc PackSetLowW
# + I SetEnv low_w 0
# + I All (CurrentPage,!Iconic,!Shaded) \
# 	PipeRead "test `expr $[w.y] + $[w.height]` -gt $low_w \
#         -a `expr $[w.y] + $[w.height]` -lt $0 \
#         -a \\( \\( $[w.x] -ge $1 -a $[w.x] -lt `expr $1 + $2` \\) \
#             -o \\( $1 -ge $[w.x] -a $1 -lt `expr $[w.x] + $[w.width]` \\) \
#             -o \\( $1 -le $[w.x] -a `expr $1 + $2` -ge `expr $[w.x] + $[w.width]` \\) \
#             -o \\( $[w.x] -le $1 -a `expr $[w.x] + $[w.width]` -ge `expr $1 + $2` \\) \
#         \\) \
#         && echo SetEnv low_w `expr $[w.y] + $[w.height]` \
#         || echo Nop"
#
#
# DestroyFunc PackSetHighW
# AddToFunc PackSetHighW
# + I SetEnv high_w $[vp.height]
# + I All (CurrentPage,!Iconic,AcceptsFocus,!Shaded) \
# 	PipeRead "test $[w.y] -lt $high_w \
#         -a $[w.y] -gt `expr $0 + $4`  \
#         -a \\( \\( $[w.x] -ge $1 -a $[w.x] -lt `expr $1 + $2` \\) \
#             -o \\( $1 -ge $[w.x] -a $1 -lt `expr $[w.x] + $[w.width]` \\) \
#             -o \\( $1 -le $[w.x] -a `expr $1 + $2` -ge `expr $[w.x] + $[w.width]` \\) \
#             -o \\( $[w.x] -le $1 -a `expr $[w.x] + $[w.width]` -ge `expr $1 + $2` \\) \
#         \\) \
#         && echo SetEnv high_w $[w.y] \
#         || echo Nop"
#
#
# DestroyFunc PackSetLeftW
# AddToFunc PackSetLeftW
# + I SetEnv left_w 0
# + I All (CurrentPage,!Iconic,AcceptsFocus,!Shaded) \
# 	PipeRead "test `expr $[w.x] + $[w.width]` -gt ${left_w} \
#         -a `expr $[w.x] + $[w.width]` -lt $1 \
#         -a \\( \\( $[w.y] -ge $0 -a $[w.y] -lt `expr $0 + $4` \\) \
#             -o \\( $[w.y] -le $0 -a `expr $[w.y] + $[w.height]` -gt $0 \\) \
#             -o \\( $[w.y] -ge $0 -a `expr $[w.y] + $[w.height]` -le `expr $0 + $4` \\) \
#             -o \\( $[w.y] -le $0 -a `expr $[w.y] + $[w.height]` -ge `expr $0 + $4` \\) \
#         \\) \
#         && echo SetEnv left_w `expr $[w.x] + $[w.width]`  \
#         || echo Nop"
#
# DestroyFunc PackSetRightW
# AddToFunc PackSetRightW
# + I SetEnv right_w $[vp.width]
# + I All (CurrentPage,!Iconic,!Shaded) \
# 	PipeRead "test $[w.x] -lt ${right_w} \
#         -a $[w.x] -gt `expr $1 + $2` \
#         -a \\( \\( $[w.y] -ge $0 -a $[w.y] -lt `expr $0 + $4` \\) \
#             -o \\( $[w.y] -le $0 -a `expr $[w.y] + $[w.height]` -gt $0 \\) \
#             -o \\( $[w.y] -ge $0 -a `expr $[w.y] + $[w.height]` -le `expr $0 + $4` \\) \
#             -o \\( $[w.y] -le $0 -a `expr $[w.y] + $[w.height]` -ge `expr $0 + $4` \\) \
#         \\) \
#         && echo SetEnv right_w $[w.x] \
#         || echo Nop"
#
#
# DestroyFunc PackWindowDown
# AddToFunc PackWindowDown
# + I WindowId $3 Raise
# + I PackSetHighW $0 $1 $2 $3 $4
# + I PipeRead "echo WindowId $3 AnimatedMove keep `expr $[high_w] - $4`p"
# + I WindowId $3 WarpToWindow 50 50
# #+ I WindowId $3 RefreshWindow
#
#
# DestroyFunc PackWindowUp
# AddToFunc PackWindowUp
# + I WindowId $3 Raise
# + I PackSetLowW $0 $1 $2 $3 $4
# + I WindowId $3 AnimatedMove keep $[low_w]p
# + I WindowId $3 WarpToWindow 50 50
# #+ I WindowId $3 RefreshWindow
#
#
# DestroyFunc PackWindowLeft
# AddToFunc PackWindowLeft
# + I WindowId $3 Raise
# + I PackSetLeftW $0 $1 $2 $3 $4
# + I WindowId $3 AnimatedMove $[left_w]p keep
# + I WindowId $3 WarpToWindow 50 50
# #+ I WindowId $3 RefreshWindow
#
#
# DestroyFunc PackWindowRight
# AddToFunc PackWindowRight
# + I WindowId $3 Raise
# + I PackSetRightW $0 $1 $2 $3 $4
# + I PipeRead "echo WindowId $3 AnimatedMove `expr ${right_w} - $2`p keep"
# + I WindowId $3 WarpToWindow 50 50
# #+ I WindowId $3 RefreshWindow
#
# DestroyFunc PackWrapperRight
# AddToFunc PackWrapperRight I NoWindow PackWindowRight $[w.y] $[w.x] $[w.width] $[w.id] $[w.height]
#
# DestroyFunc  PackWrapperLeft
# AddToFunc PackWrapperLeft I NoWindow PackWindowLeft $[w.y] $[w.x] $[w.width] $[w.id] $[w.height]
#
# DestroyFunc  PackWrapperDown
# AddToFunc PackWrapperDown I NoWindow PackWindowDown $[w.y] $[w.x] $[w.width] $[w.id] $[w.height]
#
# DestroyFunc PackWrapperUp
# AddToFunc PackWrapperUp
# + I NoWindow PackWindowUp $[w.y] $[w.x] $[w.width] $[w.id]# }}}

DestroyFunc OreStartMaximized
AddToFunc OreStartMaximized
+ I Exec exec $0
+ I Wait $0
+ I Next ($0, !Maximized) Maximize

DestroyFunc OreMoveToPage
AddToFunc   OreMoveToPage
+ I MoveToPage 0 $0
+ I GotoPage   0 $0

DestroyFunc OreFocusRaise
AddToFunc   OreFocusRaise
+ I $0 (AcceptsFocus) Focus
+ I Current (!Raise) Raise 

DestroyFunc OreMaximizeRaiseLower
AddToFunc OreMaximizeRaiseLower
+ I Maximize 
+ I Current (Maximized) Raise
+ I Current (Maximized) Raise
+ I Current (Maximized) Raise
+ I Current (Maximized) Raise
+ I Current (Maximized) Raise

DestroyFunc Ore-SuperL-E
AddToFunc   Ore-SuperL-E
+ I OreUnbind-All
+ I Key t A n OreExecUnbind mlterm
+ I Key f A n OreExecUnbind firefox
+ I Key k A n OreExecUnbind keepassx
+ I Key question A n OreMenu OreHelp-Ore-SuperL-E
+ I key Escape   A n OreUnbind-All
+ I Schedule 2000 OreUnbind-All

DestroyFunc OreMenu
AddToFunc   OreMenu
+ I OreUnbind-All
+ I Menu $0

DestroyFunc OreExecUnbind
AddToFunc   OreExecUnbind
+ I Exec exec $0
+ I OreUnbind-All

DestroyFunc Ore-SuperL-W
AddToFunc   Ore-SuperL-W
+ I Key right WFST n OreMoveUnbind right -0  w
+ I Key  left WFST n OreMoveUnbind left  0  w
+ I Key    up WFST n OreMoveUnbind up  w  0
+ I Key  down WFST n OreMoveUnbind down  w -0
+ I key bracketright WFST n OreMoveToPageUnbind +1p bracketright
+ I key bracketleft  WFST n OreMoveToPageUnbind -1p bracketleft
+ I Key m WFST n OreMaximizeRaiseLowerUnbind m
+ I key t WFST n OreRaiseLowerUnbind
+ I key s WFST n OreStickUnbind
+ I Key question WFST n OreMenu OreHelp-Ore-SuperL-W
+ I key Escape WFST   n OreUnbind-All
+ I Schedule 2000 OreUnbind-All

DestroyFunc OreStickUnbind
AddToFunc   OreStickUnbind
+ I Stick
+ I OreUnbind-All

DestroyFunc OreRaiseLowerUnbind 
AddToFunc   OreRaiseLowerUnbind 
+ I RaiseLower
+ I OreUnbind-All

DestroyFunc OreMaximizeRaiseLowerUnbind
AddToFunc OreMaximizeRaiseLowerUnbind
+ I Maximize 
+ I Current (Maximized) Raise
+ I OreUnbind-All

DestroyFunc OreMoveUnbind
AddToFunc   OreMoveUnbind
+ I Move $1 $2 Warp
+ I OreUnbind-All

DestroyFunc OreMoveToPageUnbind
AddToFunc   OreMoveToPageUnbind
+ I MoveToPage 0  $0
+ I GotoPage   0  $0
+ I OreUnbind-All

DestroyFunc Ore-SuperL-N
AddToFunc Ore-SuperL-N
+ I OreUnbind-All
+ I key n        A n OreFocusRaiseUnbind          Next
+ I key p        A n OreFocusRaiseUnbind          Prev
+ I key Next     A n OreGotoPageUnbind            0 +1p
+ I key Prior    A n OreGotoPageUnbind            0 -1p
+ I key f        A C OreGotoPageUnbind            0 +1p
+ I key b        A C OreGotoPageUnbind            0 -1p
+ I key h        A n OreDirectionFocusRaiseUnbind West
+ I key l        A n OreDirectionFocusRaiseUnbind East
+ I Key question A n OreMenu                      OreHelp-Ore-SuperL-N
+ I key Escape   A n OreUnbind-All
+ I Schedule 2000 OreUnbind-All

DestroyFunc OreUnbind-All
AddToFunc   OreUnbind-All
+ I DeSchedule 
# Super-E
+ I Key t        A n -
+ I Key f        A n -
+ I Key k        A n -
+ I Key question A n -
+ I key Escape   A n -
# Super-W
+ I Key right        WFST n -
+ I Key left         WFST n -
+ I Key up           WFST n -
+ I Key down         WFST n -
+ I key bracketright WFST n -
+ I key bracketleft  WFST n -
+ I Key m            WFST n -
+ I key t            WFST n -
+ I key s            WFST n -
+ I Key question     WFST n -
+ I key Escape       WFST n -
# Super-N
+ I key n            A n -
+ I key p            A n -
+ I key Next         A n -
+ I key Prior        A n -
+ I key f A C -
+ I key b A C -
+ I key h A n -
+ I key l A n -
# Duplicated
# + I Key question     A A -
# + I key Escape       A A -

DestroyFunc OreDirectionFocusRaiseUnbind
AddToFunc   OreDirectionFocusRaiseUnbind
+ I OreUnbind-All
+ I Direction $0 (AcceptsFocus) Focus
+ I Current (!Raise) Raise 

DestroyFunc OreGotoPageUnbind
AddToFunc   OreGotoPageUnbind
+ I OreUnbind-All
+ I GotoPage $0 $1

DestroyFunc OreFocusRaiseUnbind
AddToFunc   OreFocusRaiseUnbind
+ I $0 (AcceptsFocus) Focus
+ I Current (!Raise) Raise 
+ I OreUnbind-All

DestroyFunc OreRootMenu
AddToFunc   OreRootMenu
+ I Current (!Firefox) Key Menu A A Menu MenuFvwmRoot
+ I Current (Firefox) Key Menu A A -

#############
# 2: Styles #
#############

# Desktops and Pages
#
# Fvwm has both Virtual Desktops and Pages. Each Desktop is built from
# a grid of Pages. The following sets the name of four Desktops and then
# divides each Desktop into a 2x2 grid of Pages that are positioned as
#
#   +---+---+
#   |   |   |
#   +---+---+
#   |   |   |
#   +---+---+
#
DesktopName 0 Main
# DesktopName 1 Desk1
# DesktopName 2 Desk2
# DesktopName 3 Desk3
DesktopSize 1x4
EwmhNumberOfDesktops 1

# EdgeScroll will move the view port between the Pages when the mouse
# moves to the edge of the screen. This set the amount of distance to
# scroll at 100% (full page) and the EdgeResistance which is a timer
# for how long the mouse as at the edge before it scrolls.
#
# Set EdgeScroll 0 0 and/or EdgeResistance -1 to disable.
# EdgeScroll 100 100
# EdgeResistance 450
EdgeScroll 0 0
EdgeResistance -1
EdgeThickness 1
Style * EdgeMoveDelay 350, EdgeMoveResistance 350

# EwmhBaseStruts [left] [right] [top] [bottom]
# Reserves space along the edge(s) of the Screen that will not
# be covered when maximizing or placing windows.
# EwmhBaseStruts 0 120 0 0
EwmhBaseStruts 0 60 0 0

# This sets the ClickTime and MoveThreshold used to determine
# Double Clicks, Hold and Move for the mouse.
ClickTime 350
MoveThreshold 3

# Sets the focus style to SloppyFocus and a mouse click
# in a window will Raise it.
Style * SloppyFocus, MouseFocusClickRaises

# Default Font
# DefaultFont "xft:Noto Sans CJK JP:Bold:size=8:antialias=True"
# DefaultFont "-mplus-gothic-medium-r-normal--10-100-75-75-*-*-*-*"
DefaultFont "-mplus-gothic-medium-r-normal--10-*"
# Window Placement
Style * TileCascadePlacement, GrabFocusOff, !UsePPosition

# Sets all windows to OpaqueMove (vs a wired frame) and  windows will
# snap to each other and the edge of the screen.
# OpaqueMoveSize -1
OpaqueMoveSize 0
HideGeometryWindow
Style * ResizeOpaque, SnapAttraction 15 SameType ScreenAll, SnapGrid
XorValue 55555

# Transient Windows (such as open file windows)
Style * DecorateTransient, StackTransientParent
Style * !FPGrabFocusTransient, FPReleaseFocusTransient

# WindowShade
Style * WindowShadeScrolls, WindowShadeSteps 10

# Ignore Numlock and other modifiers for bindings
# See http://fvwm.org/documentation/faq/#why-do-numlock-capslock-and-scrolllock-interfere-with-clicktofocus-andor-my-mouse-bindings
IgnoreModifiers L25

# Decor Styles
Style * BorderWidth 1, HandleWidth 5, MWMButtons, \
	FvwmBorder, FirmBorder, UseDecor FvwmDecor
Style * Colorset 1, HilightColorset 2
Style * BorderColorset 3, HilightBorderColorset 4

# Disable Icons from appearing on desktop.
# Comment this out or use Style * Icon to get the icons back.
Style * !Icon
Style * TitleAtRight, RightTitleRotatedCCW

# Window Specific Styles
Style RightPanel !Title, !Borders, !Handles, Sticky, WindowListSkip, NeverFocus
Style ConfirmQuit !Title, PositionPlacement Center, WindowListSkip, Layer 6
Style FvwmIdent WindowListSkip

# Ore Styles
Style Zathura MiniIcon acroread.svg:18x18

#######
# 3: Colorsets
###########

Read colorset.fvwm

#######
# 4: Menus
###########
MenuStyle * MenuColorset 5, ActiveColorset 6, GreyedColorset 7, TitleColorset 8
MenuStyle * Hilight3DOff, HilightBack, HilightTitleBack, SeparatorsLong
MenuStyle * TrianglesSolid, TrianglesUseFore
MenuStyle * ItemFormat "%|%3.1i%5.3l%5.3>%|"
MenuStyle * Font "-mplus-gothic-medium-r-normal--10-*"

# Root Menu
#
# The root menu will PopUp with a click in the root
# window or using alt-f1 (or menu).
DestroyMenu MenuFvwmRoot
AddToMenu   MenuFvwmRoot "Fvwm" Title
# + "Programs%icons/programs.png%" Popup MenuPrograms
# + "XDG Menu%icons/apps.png%" Popup XDGMenu
# + "Mlterm%/home/snob/.icons/Flat\ Remix/apps/scalable/terminal.svg:18x18%" Exec exec mlterm 
# + "XTerm%icons/terminal.png%" Exec exec $[infostore.terminal]
+ "" Nop
+ "FvwmConsole%icons/terminal.png%" Module FvwmConsole -terminal $[infostore.terminal]
# + "Wallpapers%icons/wallpaper.png%" Popup BGMenu
# + "Man Pages%icons/help.png%" Popup MenuFvwmManPages
+ "Copy Config%icons/conf.png%" FvwmScript FvwmScript-ConfirmCopyConfig
+ "" Nop
+ "Refresh%icons/refresh.png%" Refresh
+ "Restart%icons/restart.png%" Restart
+ "Quit%icons/quit.png%" Module FvwmScript OreScript-ConfirmQuit

# Generate XDGMenu
PipeRead "fvwm-menu-desktop"

# Programs Menu
#
# This test for some common programs and adds them to the menu.
# When adding programs you don't need to use the Test (x foo)
# lines as this is only to help make this menu portable.
DestroyMenu MenuPrograms
AddToMenu   MenuPrograms "Programs" Title
Test (x chromium) + "Chromium" Exec exec chromium
Test (x firefox) + "Firefox" Exec exec firefox
Test (x google-chrome) + "Google-Chrome" Exec exec google-chrome
Test (x gvim) + "gVim" Exec exec gvim
Test (x xemacs) + "XEmacs" Exec exec xemacs
Test (x gimp) + "Gimp" Exec exec gimp
Test (x vlc) + "VLC" Exec exec vlc

# Background Menu
#
# Backgrounds are located in ~/.fvwm/images/background/
# Menu icons are located in ~/.fvwm/images/bgicons/
DestroyMenu BGMenu
AddToMenu   BGMenu "Wallpapers" Title
+ "Floral%bgicons/bg1.png%" SetBG bg1.png
+ "Circles%bgicons/bg2.png%" SetBG bg2.png
+ "Space%bgicons/bg3.png%" SetBG bg3.png

# Window Operations Menus
DestroyMenu MenuWindowOps
AddToMenu   MenuWindowOps
+ "Move"      Move
+ "Resize"    Resize
+ "Iconify"   Iconify
+ "Maximize"  Maximize
+ "Shade"     WindowShade
+ "Stick"     Stick
+ "" Nop
+ "Close"     Close
+ "More..."   Menu MenuWindowOpsLong This 0 0

DestroyMenu MenuWindowOpsLong
AddToMenu   MenuWindowOpsLong
+ "Move"                Move
+ "Resize"              Resize
+ "(De)Iconify"         Iconify
+ "(Un)Maximize"        Maximize
+ "(Un)Shade"           WindowShade
+ "(Un)Sticky"		Stick
+ "(No)TitleBar"	Pick (CirculateHit) ToggleTitle
# + "Send To Desk"        Popup MenuSendToDesk
+ "" Nop
+ "Close"               Close
+ "Destroy"             Destroy
+ "" Nop
+ "Raise"		Raise
+ "Lower"		Lower
+ "" Nop
+ "StaysOnTop"          Pick (CirculateHit) Layer 0 6
+ "StaysPut"            Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"       Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "Identify"            Module FvwmIdent

DestroyMenu MenuIconOps
AddToMenu   MenuIconOps
+ "(De)Iconify"         Iconify
+ "(Un)Maximize"        Maximize
+ "(Un)Shade"           WindowShade
+ "(Un)Sticky"		Stick
+ "(No)TitleBar"	Pick (CirculateHit) ToggleTitle
# + "Send To Desk"        Popup MenuSendToDesk
+ "" Nop
+ "Close"               Close
+ "Destroy"             Destroy
+ "" Nop
+ "Raise"		Raise
+ "Lower"		Lower
+ "" Nop
+ "StaysOnTop"          Pick (CirculateHit) Layer 0 6
+ "StaysPut"            Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"       Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "Identify"            Module FvwmIdent

DestroyMenu MenuSendToDesk
AddToMenu   MenuSendToDesk
+ "Current"	MoveToDesk
+ "Desk 0"	MoveToDesk 0 0
+ "Desk 1"	MoveToDesk 0 1
+ "Desk 2"	MoveToDesk 0 2
+ "Desk 3"	MoveToDesk 0 3

# Fvwm Man Pages (Help) Menu
DestroyMenu MenuFvwmManPages
AddToMenu   MenuFvwmManPages "Help" Title
+ "fvwm"                ViewManPage fvwm
+ "FvwmAnimate"         ViewManPage FvwmAnimate
+ "FvwmAuto"            ViewManPage FvwmAuto
+ "FvwmBacker"          ViewManPage FvwmBacker
+ "FvwmBanner"          ViewManPage FvwmBanner
+ "FvwmButtons"         ViewManPage FvwmButtons
+ "FvwmCommand"         ViewManPage FvwmCommand
+ "FvwmConsole"         ViewManPage FvwmConsole
+ "FvwmEvent"           ViewManPage FvwmEvent
+ "FvwmForm"            ViewManPage FvwmForm
+ "FvwmIconMan"         ViewManPage FvwmIconMan
+ "FvwmIdent"           ViewManPage FvwmIdent
+ "FvwmPager"           ViewManPage FvwmPager
+ "FvwmPerl"            ViewManPage FvwmPerl
+ "FvwmProxy"           ViewManPage FvwmProxy
+ "FvwmRearrange"       ViewManPage FvwmRearrange
+ "FvwmScript"          ViewManPage FvwmScript
+ "" Nop
+ "fvwm-root"	        ViewManPage fvwm-root
+ "fvwm-menu-desktop"   ViewManPage fvwm-menu-desktop
+ "fvwm-menu-directory" ViewManPage fvwm-menu-directory
+ "fvwm-menu-headlines" ViewManPage fvwm-menu-headlines
+ "fvwm-menu-xlock"     ViewManPage fvwm-menu-xlock
+ "fvwm-config"         ViewManPage fvwm-config

DestroyMenu OreHelp
AddToMenu   OreHelp
+ "Super-E: Exec command"       Menu OreHelp-Ore-SuperL-E
+ "Super-W: Window arrangement" Menu OreHelp-Ore-SuperL-W
+ "Super-N: Navigation"        Menu OreHelp-Ore-SuperL-N

DestroyMenu OreHelp-Ore-SuperL-E
AddToMenu OreHelp-Ore-SuperL-E
+ "t: mlterm"   OreExecUnbind t mlterm
+ "f: firefox"  OreExecUnbind f firefox
+ "k: keepassx" OreExecUnbind k keepassx

DestroyMenu OreHelp-Ore-SuperL-W
AddToMenu   OreHelp-Ore-SuperL-W
+ "→: Move window to right edge" OreMoveUnbind               right -0 w
+ "←: Move window to left edge"  OreMoveUnbind               right 0  w
+ "↑: Move window to upper edge" OreMoveUnbind               right w  0
+ "↓: Move window to upper edge" OreMoveUnbind               right w  -0
+ "] : Move window to next page"  OreMoveToPageUnbind         +1p   bracketright
+ "[ : Move window to prev page"  OreMoveToPageUnbind         -1p   bracketleft
+ "m : Toggle maximize"           OreMaximizeRaiseLowerUnbind m
+ "t : Toggle Raise Lower" OreRaiseLowerUnbind

DestroyMenu OreHelp-Ore-SuperL-N
AddToMenu OreHelp-Ore-SuperL-N
+ "n:   Focus to next window"   OreFocusRaiseUnbind Next
+ "p:   Focus to prev window"   OreFocusRaiseUnbind Prev
+ "PD:  Go to next page" OreGotoPageUnbind 0 +1p
+ "PU:  Go to prev page"   OreGotoPageUnbind 0 -1p
+ "c-f: Go to next page"      OreGotoPageUnbind 0 +1p
+ "c-b: Go to prevn page"     OreGotoPageUnbind 0 -1p
+ "h:   Focus to left window"   OreDirectionFocusRaiseUnbind West
+ "l:   Focus to right window"  OreDirectionFocusRaiseUnbind East

#######
# 5: Mouse and Key bindings
####################

Read $./bindings.fvwm

#######
# 6: Window Decor
#
# Buttons Locations: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#
#   1 - WindowOps Menu
#   2 - Close
#   4 - Maximize
#   6 - Minimize
###########
DestroyDecor FvwmDecor
AddToDecor   FvwmDecor
+ TitleStyle Centered Height 18 -- Flat
+ ButtonStyle All ActiveUp Vector 5 15x15@4 15x85@3 85x85@3 85x15@3 15x15@3 -- Flat
+ ButtonStyle All ToggledActiveUp Vector 5 15x15@4 15x85@3 85x85@3 85x15@3 15x15@3 -- Flat
+ ButtonStyle All ActiveDown Vector 5 20x20@4 20x80@3 80x80@3 80x20@3 20x20@3 -- Flat
+ ButtonStyle All ToggledActiveDown Vector 5 20x20@4 20x80@3 80x80@3 80x20@3 20x20@3 -- Flat
+ ButtonStyle All ToggledInactive Vector 5 47x47@3 57x53@3 53x53@3 53x47@3 47x47@3 -- Flat
+ ButtonStyle All Inactive Vector 5 47x47@3 57x53@3 53x53@3 53x47@3 47x47@3 -- Flat
+ AddButtonStyle 1 Active Vector 5 45x45@3 55x45@3 55x55@3 45x55@3 45x45@3
+ AddButtonStyle 2 Active Vector 4 35x35@3 65x65@3 65x35@4 35x65@3
+ AddButtonStyle 4 Active Vector 8 30x70@3 30x30@3 70x30@3 70x70@3 30x70@3 \
        30x50@4 50x50@3 50x70@3
+ AddButtonStyle 4 ToggledActiveUp Vector 8 30x70@3 30x30@3 70x30@3 70x70@3 30x70@3 \
        50x30@4 50x50@3 70x50@3
+ AddButtonStyle 6 Active Vector 5 35x60@3 65x60@3 65x50@3 35x50@3 35x60@3
+ ButtonStyle All - Clear
+ ButtonStyle 1 - MwmDecorMenu
+ ButtonStyle 4 - MwmDecorMax
+ ButtonStyle 6 - MwmDecorMin

############
# 7: Modules
#############

# FvwmIdent
#
# FvwmIdent is a module that can be used to get the various info about
# a window. One use is getting the class/resource/name of a window.
DestroyModuleConfig FvwmIdent:*
*FvwmIdent: Colorset 10
*FvwmIdent: Font "-mplus-gothic-medium-r-normal--10-*"

# FvwmBanner
#
# This displays the Fvwm Logo for 5 seconds. This is displayed
# when fvwm starts.
DestroyModuleConfig FvwmBanner:*
*FvwmBanner: NoDecor
*FvwmBanner: Timeout 5

# FvwmScript
#
# FvwmScript is a module that allows one to write custom desktop
# widgets and various other tools. This config uses two FvwmScripts.
#   - DateTime - uses the output of "date" to display the date/time
#     on the RightPanel.
#   - Quit - This is a popup that asks for quit confirmation before
#     quitting fvwm.
DestroyModuleConfig FvwmScript:*
*FvwmScript: DefaultColorset 10

# FvwmButtons - RightPanel
#
# FvwmButtons is a powerful module that can be used to build custom
# panels and docks. This config uses FvwmButtons to build the RightPanel.
# The panel contains buttons to switch desks, FvwmPager, a system tray,
# FvwmIconMan (list of running windows), and a clock.
#
# Note - To use the system tray you must have "stalonetray" installed.
DestroyModuleConfig RightPanel:*
*RightPanel: Geometry 60x$[vp.height]-0+0
*RightPanel: Colorset 10
*RightPanel: Rows $[vp.height]
*RightPanel: Columns 60
*RightPanel: Frame 0
*RightPanel: Font "-mplus-gothic-medium-r-normal--10-*"
# *RightPanel: (120x45, Icon "fvwm-logo-small.png", Frame 0)
# *RightPanel: (120x5, Frame 0)
# *RightPanel: (10x20, Frame 0)
# *RightPanel: (25x20, Id desk0, Title "0", Action (Mouse 1) GotoDesk 0 0, Colorset 11, ActiveColorset 12, Frame 0)
# *RightPanel: (25x20, Id desk1, Title "1", Action (Mouse 1) GotoDesk 0 1, ActiveColorset 12, Frame 0)
# *RightPanel: (25x20, Id desk2, Title "2", Action (Mouse 1) GotoDesk 0 2, ActiveColorset 12, Frame 0)
# *RightPanel: (25x20, Id desk3, Title "3", Action (Mouse 1) GotoDesk 0 3, ActiveColorset 12, Frame 0)
# *RightPanel: (25x20, Id desk0, Title "0", Action (Mouse 1) GotoDesk 0 0, Colorset 11, ActiveColorset 12, Frame 0)
# *RightPanel: (25x20, Id desk1, Title "1", Action (Mouse 1) GotoDesk 0 1, ActiveColorset 12, Frame 0)
# *RightPanel: (25x20, Id desk2, Title "2", Action (Mouse 1) GotoDesk 0 2, ActiveColorset 12, Frame 0)
# *RightPanel: (25x20, Id desk3, Title "3", Action (Mouse 1) GotoDesk 0 3, ActiveColorset 12, Frame 0)
# *RightPanel: (10x20, Frame 0)
*RightPanel: (2x120, Frame 0)
*RightPanel: (56x120, Swallow FvwmPager 'Module FvwmPager *', Frame 0)
*RightPanel: (2x120, Frame 0)
# *RightPanel: (5x80, Frame 0)
# *RightPanel: (110x80, Swallow FvwmPager 'Module FvwmPager *', Frame 0)
# *RightPanel: (5x80, Frame 0)
*RightPanel: (60x5, Frame 0)
# Test (x stalonetray) *RightPanel: (60x30, Swallow(NoClose,UseOld) \
#     stalonetray 'Exec exec stalonetray --config \
#     "$[FVWM_DATADIR]/default-config/.stalonetrayrc"', Frame 0)
Test (x stalonetray) PipeRead 'echo "*RightPanel: (60x$(($[vp.height]-225)), \
    Top, Swallow FvwmIconMan \'Module FvwmIconMan\', Frame 0)"'
Test (!x stalonetray) PipeRead 'echo "*RightPanel: (60x$(($[vp.height]-205)),\
    Top, Swallow FvwmIconMan \'Module FvwmIconMan\', Frame 0)"'
Test (x stalonetray) *RightPanel: (60x20, Swallow(NoClose,UseOld) \
    stalonetray 'Exec exec stalonetray' , Frame 0)
# PipeRead 'echo "*RightPanel: (60x$(($[vp.height]-205)),\
#      Top, Swallow FvwmIconMan \'Module FvwmIconMan\', Frame 0)"'
# *RightPanel: (60x20, Swallow(NoClose,UseOld) uim-toolbar-gtk 'Exec exec uim-toolbar-gtk')
*RightPanel: (60x30, Swallow DateTime 'Module FvwmScript OreDateTime',\
    Frame 0)
*RightPanel: (60x5, Frame 0)

# FvwmPager
#
# This module displays the location of the windows on the various Pages
# and Desks. This is setup to show only the Pages on the current Desk.
DestroyModuleConfig FvwmPager:*
*FvwmPager: Colorset * 10
*FvwmPager: HilightColorset * 13
*FvwmPager: BalloonColorset * 10
*FvwmPager: WindowColorsets 10 11
*FvwmPager: Font None
*FvwmPager: Balloons All
*FvwmPager: BalloonFont "-mplus-gothic-medium-r-normal--10-*"
*FvwmPager: BallonYOffset +2
*FvwmPager: Window3dBorders
*FvwmPager: MiniIcons

# FvwmIconMan
#
# FvwmIconMan is a powerful tool to list and manage windows. This
# is used as the window list in the panel or taskbar.
DestroyModuleConfig FvwmIconMan:*
*FvwmIconMan: UseWinList true
*FvwmIconMan: ButtonGeometry 60x30
*FvwmIconMan: Colorset 10
*FvwmIconMan: FocusColorset 11
*FvwmIconMan: FocusAndSelectColorset 12
*FvwmIconMan: SelectColorset 12
*FvwmIconMan: IconAndSelectColorset 12
*FvwmIconMan: DrawIcons always
*FvwmIconMan: ReliefThickness 0
*FvwmIconMan: Format "%t"
*FvwmIconMan: Font "-mplus-gothic-medium-r-normal--10-*"
*FvwmIconMan: Action Mouse 1 A sendcommand IconManClick
*FvwmIconMan: Action Mouse 2 A sendcommand Nop
*FvwmIconMan: Action Mouse 3 A sendcommand "Menu MenuIconOps"
*FvwmIconMan: Resolution global
*FvwmIconMan: Tips needed
*FvwmIconMan: TipsFont "-mplus-gothic-medium-r-normal--10-*"
*FvwmIconMan: TipsDelays 0 0
*FvwmIconMan: Sort id
*FvwmIconMan: Title "" 
*FvwmIconMan: TipsPlacement leftright 

# FvwmEvent
#
# FvwmEvent is a module that can run an action or function
# on specific events. This instance changes which desk number
# is highlighted when the desk is changed.
DestroyModuleConfig EventNewDesk:*
*EventNewDesk: PassID
*EventNewDesk: new_desk ChangeDesk

# FvwmForm
#
# FvwmForm is a module that can be used to build a GUI
# form. Used with fvwm-menu-desktop-config.fpl.
# This sets the default colorsets.
*FvwmFormDefault: Colorset 10
*FvwmFormDefault: ItemColorset 13

*FvwmScript: DefaultFont "-mplus-gothic-medium-r-normal--10-*"

# When focus is changed, call OreRootMenu to change Menu key binding
DestroyModuleConfig OreMenuKeyBind: *
*OreMenuKeyBind: Cmd Function
*OreMenuKeyBind: focus_change OreRootMenu
Module FvwmEvent OreMenuKeyBind


# vim: set fdm=marker : 
